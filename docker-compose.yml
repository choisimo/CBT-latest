services:
  auth-server:
    build:
      # 빌드 컨텍스트를 독립적인 Gradle 프로젝트인 Auth-server/backend 로 지정합니다.
      context: ./Auth-server/backend
    container_name: auth-server-app
    ports:
      - "7078:7078"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb-container:3306/oss_emotion?useUnicode=true&characterEncoding=UTF-8
      - SPRING_DATASOURCE_USERNAME=nodove
      - SPRING_DATASOURCE_PASSWORD=dover1234!
      - SPRING_DATA_MONGODB_URI=mongodb://nodove:dover2718281!@mongodb-container:27017/oss_emotion?authSource=admin
      - SPRING_DATA_REDIS_HOST=redis-container
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=
    depends_on:
      - mariadb-container
      - mongodb-container
      - redis-container
    networks:
      - cbt-network

  mariadb-container:
    image: mariadb:10.6
    container_name: mariadb-db
    ports:
      - "13306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=oss_emotion
      - MYSQL_USER=nodove
      - MYSQL_PASSWORD=dover1234!
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./db/:/docker-entrypoint-initdb.d
    networks:
      - cbt-network
    restart: unless-stopped

  mongodb-container:
    image: mongo:6.0
    container_name: mongodb-db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=nodove
      - MONGO_INITDB_ROOT_PASSWORD=dover2718281!
    volumes:
      - mongodb_data:/data/db
    networks:
      - cbt-network
    restart: unless-stopped

  redis-container:
    image: redis:7-alpine
    container_name: redis-db
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "60", "1"]
    volumes:
      - redis_data:/data
    networks:
      - cbt-network
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    networks:
      - cbt-network
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./monitoring/promtail-config.yml:/etc/promtail/promtail-config.yml
    command: -config.file=/etc/promtail/promtail-config.yml
    depends_on:
      - loki
    networks:
      - cbt-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.51.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - cbt-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.4.3
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_CSRF_TRUSTED_ORIGINS=http://127.0.0.1:39951,http://localhost:3000
      - GF_CORS_ENABLED=true
      - GF_CORS_ALLOW_ORIGINS=http://127.0.0.1:39951,http://localhost:3000
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki
      - prometheus
    networks:
      - cbt-network
    restart: unless-stopped

networks:
  cbt-network:
    driver: bridge

volumes:
  mariadb_data:
  mongodb_data:
  redis_data:
  grafana_data:
  loki_data:
