debug=true

#spring.profiles.active=dev

spring.application.name=auth
domain.root=nodove.com
domain.auth-sub=auth

# server socket
server.port=7078

# DataSource settings for MariaDB
spring.datasource.url=jdbc:mariadb://localhost:3306/oss_emotion?useUnicode=true&characterEncoding=utf8
spring.datasource.username=nodove
spring.datasource.password=dover1234!
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# socket port
socket.io.address=localhost
socket.io.port=5055

# site domain
site.domain=${domain.auth-sub}.${domain.root}
# Cookie-domain
server.cookie.domain=${domain.root}

# file path
file.profile-path=/project/drive/web/profile/
file.image-path=/project/drive/web/images/
file.developer-path=/project/drive/web/developer/
file.file-path=/project/drive/web/file/
file.server=https://file.${domain.root}

# secret-key
jwt.secret-key=cbt-diary-temp-secret-key-for-access-token-hs512-signing-and-validation-purpose-only
jwt.secret-key2=cbt-diary-temp-secret-key-for-refresh-token-hs512-signing-and-validation-purpose-only
jwt.authorized-key=Vb+cuQHwWepOkmfeJcNoJCb2lz2oz3CuRzvnNk4I0xf44ysDHZQlV0g2xpMH8KYMEoT81UyYN96fYQw+SfCKTY0njtI6gNj3rUvA6VvRxQqJb5dO/x/5RDitBVMuDrkoCxVyR7jwCf3XucUR5QZLMKwapYjPxwYR0iF3yrfM4jAP54ahgg6RoIs8qdLNox5x39BBkMXa1stSvQYhtwE69p5sckx2ruG5K4Wfup9AWJhA6Ii9BbyiSHjyr4mFwd9vfWvZU50iUDdB4bSOlMla+lEUfnJClAsVGGqZw1OvxXnCi7oOC21tPgd7Vvmzh9IeeQ2gcU6+SsgzHphKhRbYtsTA==
jwt.access-token-expiration-minutes=60
jwt.refresh-token-expiration-minutes=43200

# security-config
auth_proxy_header=X-User-Authorized

# JWT
ACCESS_TOKEN_VALIDITY = 3600
REFRESH_TOKEN_VALIDITY = 2592000
AUTH_TOKEN_VALIDITY = 900

# sse
server.tomcat.keep-alive-timeout=60000
server.tomcat.max-keep-alive-requests=100

# JPA setting
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect

# run schema.sql every startup
auth.sql.init.mode=never
spring.sql.init.mode=never
spring.sql.init.schema-locations=classpath:db/schema.sql

# include profile properties file
# application-[profile-name].properties
spring.config.import=application-oauth-kakao.properties,application-oauth-naver.properties,application-oauth-google.properties

kakao.token.validate.url=https://kapi.kakao.com/v1/user/access_token_info
naver.token.validate.url=https://openapi.naver.com/v1/nid/me
google.token.validate.url=https://www.googleapis.com/oauth2/v3/tokeninfo

# email
server.email.sender=service@${domain.root}

# AI Server Configuration
ai.server.url=http://localhost:8000

server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true

# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# Email (SMTP) configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=immuddelo@gmail.com
spring.mail.password=xodj isjy fzxm xbcj
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.debug=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2

# CORS Configuration
# Comma-separated list of allowed origins.
# Ensure no trailing spaces around commas or values.
cors.allowed-origins.prod=https://cbt-app.com,https://auth.nodove.com
cors.allowed-origins.dev=http://localhost:8000,http://localhost:3000,http://127.0.0.1:8000,http://127.0.0.1:3000,http://localhost:8081,http://127.0.0.1:8081
# Added 8081 for React Native Metro bundler default.

# CORS origin patterns (wildcard support)
cors.allowed-origin-patterns.dev=http://localhost:* ,http://127.0.0.1:* ,exp://*
cors.allowed-origin-patterns.prod=https://*.nodove.com

# Resilience4j Configuration
resilience4j.circuitbreaker.instances.aiService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.aiService.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.aiService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.aiService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.aiService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.aiService.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.aiService.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.aiService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.aiService.eventConsumerBufferSize=10
# Adding specific exceptions that should count as failures for the circuit breaker
resilience4j.circuitbreaker.instances.aiService.recordExceptions=java.io.IOException,java.util.concurrent.TimeoutException,org.springframework.web.reactive.function.client.WebClientRequestException,org.springframework.web.reactive.function.client.WebClientResponseException

# TimeLimiter configuration for AI WebClient
resilience4j.timelimiter.instances.aiService.timeout-duration=35s
resilience4j.timelimiter.instances.aiService.cancel-running-future=false

# MongoDB Configuration (인증 비활성화)
spring.data.mongodb.uri=mongodb://mongodb-container:27017/oss_emotion
spring.data.mongodb.database=oss_emotion
# MongoDB Connection Pool Settings
spring.data.mongodb.option.max-connection-pool-size=20
spring.data.mongodb.option.min-connection-pool-size=5
spring.data.mongodb.option.max-connection-idle-time=60000
spring.data.mongodb.option.max-connection-life-time=120000

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=