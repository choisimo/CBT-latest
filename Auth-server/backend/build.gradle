plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    // Lombok 자동 설정을 위한 FreeFair 플러그인
    id 'io.freefair.lombok' version '8.6'
}

// Lombok 버전을 명시적으로 설정 (JDK 21 호환성 보장)
lombok {
    version.set("1.18.32")
}

group = 'com.authentication'
version = '0.0.1-SNAPSHOT'

// ===================================================================
// [수정 1] QueryDSL 관련 변수들을 파일 상단에 정의하여 스코프 문제 해결
// ===================================================================
def queryDslVersion = '6.1'
// QueryDSL이 생성할 파일들이 저장될 디렉토리를 명확하게 지정합니다.
def querydslDir = "$buildDir/generated/querydsl"


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Database
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    runtimeOnly 'com.h2database:h2:2.1.214'
    testImplementation 'com.h2database:h2:2.1.214'

    // QueryDSL (OpenFeign 포크 버전)
    implementation "io.github.openfeign.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "io.github.openfeign.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // JWT
    compileOnly 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Utils
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.15.1'
    implementation 'org.apache.commons:commons-text:1.10.0'

    // Email
    implementation 'org.springframework:spring-context-support'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'

    // Swagger (Springdoc)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // Jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

    // Socket.IO
    implementation 'com.corundumstudio.socketio:netty-socketio:2.0.3'

    // Resilience4j (CircuitBreaker & TimeLimiter)
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'
    implementation 'io.github.resilience4j:resilience4j-reactor:2.2.0'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.github.jsqlparser:jsqlparser:5.0'
}


// ===================================================================
// [수정 2] QueryDSL 경로를 한 곳으로 통일하여 설정
// ===================================================================

// 1. 컴파일 시 QueryDSL 관련 소스를 생성할 디렉토리를 지정합니다.
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// 2. 위에서 지정한 디렉토리를 메인 소스셋에 포함시켜 컴파일 시 Q-Type을 인식하도록 합니다.
sourceSets {
    test {
        java {
            exclude 'com/authentication/auth/diary/**'
            exclude 'com/authentication/auth/service/oauth2/**'
            exclude 'com/authentication/auth/service/diary/**'
            exclude 'com/authentication/auth/controller/auth/**'
            exclude 'com/authentication/auth/service/ai/**'
            exclude 'com/authentication/auth/controller/auth/service/**'
            exclude 'com/authentication/auth/token/**'
        }
    }
    main {
        java {
            srcDirs += [ querydslDir ]
        }
    }
}

// 3. clean 작업 시, QueryDSL이 생성한 디렉토리도 함께 삭제하도록 합니다.
tasks.named('clean', Delete) {
    delete querydslDir
}

// ===================================================================

tasks.named('test') {
    useJUnitPlatform()
}
