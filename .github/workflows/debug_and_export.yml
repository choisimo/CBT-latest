name: Debug, Report, and Export Pure Project

on:
  # 'Actions' 탭에서 수동으로 워크플로우를 실행할 수 있도록 함
  workflow_dispatch:
  # main 브랜치에 push될 때마다 자동 실행
  push:
    branches:
      - '*test*'
      - '*debug*'
      - '*develop*'

jobs:
  build-test-export:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃 (서브모듈 포함)
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      # 2. JDK 21 설정 (Auth-server 빌드용)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Gradle 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./Auth-server/backend/gradlew

      # 4. 서브모듈을 원격 저장소의 최신 정보로 업데이트
      - name: Update submodules to latest version
        run: git submodule update --init --recursive --remote

      # 5. Auth-server 백엔드 테스트 실행
      # 테스트 실패 시 워크플로우가 중단되지 않도록 `|| true` 추가
      - name: Run backend tests
        id: test-step
        run: |
          cd ./Auth-server/backend
          ./gradlew test || true

      # 6. 테스트 결과 이메일로 전송
      # 앞선 테스트 단계의 성공/실패 여부와 관계없이 항상 실행
      - name: Send email with test results
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          # GitHub Secrets를 사용하여 SMTP 서버 정보 설정
          server_address: ${{ secrets.SMTP_HOST }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          
          # 제목: [성공/실패] - 프로젝트 디버깅 결과
          subject: "${{ job.status }} - CBT-Diary 프로젝트 디버깅 결과"
          
          # 받는 사람: GitHub Secret에서 가져옴
          to: ${{ secrets.MAIL_TO }}
          from: GitHub Actions <actions@github.com> # 보내는 사람 이름
          
          # 메일 본문: 테스트 결과 요약 및 워크플로우 링크 포함
          body: |
            CBT-Diary 프로젝트의 자동 디버깅 및 테스트가 완료되었습니다.
            
            - 테스트 결과: ${{ steps.test-step.outcome }}
            - 워크플로우 실행 링크: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            자세한 내용은 첨부된 테스트 리포트(index.html)를 확인하세요.
          
          # 첨부 파일: Gradle 테스트 리포트
          files: ./Auth-server/backend/build/reports/tests/test/index.html
          ignore_not_found: "true" # 파일이 없을 경우 무시

      # 7. 순수 프로젝트 파일 생성 ('.git' 관련 내용 제거)
      - name: Create pure project copy (remove .git)
        run: |
          # 대상 서브모듈 경로를 변수로 설정
          SUBMODULE_PATH="Auth-server"
          EXPORT_PATH="${SUBMODULE_PATH}-work"
          
          echo "서브모듈 '${SUBMODULE_PATH}'를 '${EXPORT_PATH}'로 복사합니다."
          cp -r "${SUBMODULE_PATH}/" "${EXPORT_PATH}/"
          
          echo "'.git' 관련 파일을 모두 삭제합니다..."
          # .git 디렉터리 삭제
          find "${EXPORT_PATH}" -type d -name ".git" -exec rm -rf {} +
          # .gitignore, .gitmodules 등 .git으로 시작하는 파일 삭제
          find "${EXPORT_PATH}" -type f -name ".git*" -exec rm -f {} +
          
          echo "순수 프로젝트 파일 생성이 완료되었습니다: ${EXPORT_PATH}"

      # 8. 생성된 순수 프로젝트 파일을 아티팩트로 업로드
      - name: Upload pure project artifact
        uses: actions/upload-artifact@v4
        with:
          name: pure-project-files
          path: Auth-server-work